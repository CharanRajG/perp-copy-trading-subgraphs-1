// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CreateVault extends ethereum.Event {
  get params(): CreateVault__Params {
    return new CreateVault__Params(this);
  }
}

export class CreateVault__Params {
  _event: CreateVault;

  constructor(event: CreateVault) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get vaultImplementation(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get vaultProxy(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class DeleteVault extends ethereum.Event {
  get params(): DeleteVault__Params {
    return new DeleteVault__Params(this);
  }
}

export class DeleteVault__Params {
  _event: DeleteVault;

  constructor(event: DeleteVault) {
    this._event = event;
  }

  get creator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get vaultProxy(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Trader extends ethereum.Event {
  get params(): Trader__Params {
    return new Trader__Params(this);
  }
}

export class Trader__Params {
  _event: Trader;

  constructor(event: Trader) {
    this._event = event;
  }

  get name(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get trader(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get inverseCopyTrade(): boolean {
    return this._event.parameters[2].value.toBoolean();
  }

  get copySizeBPS(): i32 {
    return this._event.parameters[3].value.toI32();
  }

  get defaultCollateral(): Address {
    return this._event.parameters[4].value.toAddress();
  }
}

export class VaultFactory extends ethereum.SmartContract {
  static bind(address: Address): VaultFactory {
    return new VaultFactory("VaultFactory", address);
  }

  MANAGEMENT_FEE(): BigInt {
    let result = super.call("MANAGEMENT_FEE", "MANAGEMENT_FEE():(uint256)", []);

    return result[0].toBigInt();
  }

  try_MANAGEMENT_FEE(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MANAGEMENT_FEE",
      "MANAGEMENT_FEE():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  governor(): Address {
    let result = super.call("governor", "governor():(address)", []);

    return result[0].toAddress();
  }

  try_governor(): ethereum.CallResult<Address> {
    let result = super.tryCall("governor", "governor():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  keeper(): Address {
    let result = super.call("keeper", "keeper():(address)", []);

    return result[0].toAddress();
  }

  try_keeper(): ethereum.CallResult<Address> {
    let result = super.tryCall("keeper", "keeper():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  vaults(param0: Address, param1: Address): Bytes {
    let result = super.call("vaults", "vaults(address,address):(bytes32)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toBytes();
  }

  try_vaults(param0: Address, param1: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall("vaults", "vaults(address,address):(bytes32)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreateVaultCall extends ethereum.Call {
  get inputs(): CreateVaultCall__Inputs {
    return new CreateVaultCall__Inputs(this);
  }

  get outputs(): CreateVaultCall__Outputs {
    return new CreateVaultCall__Outputs(this);
  }
}

export class CreateVaultCall__Inputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }

  get name(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateVaultCall__Outputs {
  _call: CreateVaultCall;

  constructor(call: CreateVaultCall) {
    this._call = call;
  }
}

export class DeleteVaultCall extends ethereum.Call {
  get inputs(): DeleteVaultCall__Inputs {
    return new DeleteVaultCall__Inputs(this);
  }

  get outputs(): DeleteVaultCall__Outputs {
    return new DeleteVaultCall__Outputs(this);
  }
}

export class DeleteVaultCall__Inputs {
  _call: DeleteVaultCall;

  constructor(call: DeleteVaultCall) {
    this._call = call;
  }

  get vaultProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DeleteVaultCall__Outputs {
  _call: DeleteVaultCall;

  constructor(call: DeleteVaultCall) {
    this._call = call;
  }
}

export class FireVaultEventCall extends ethereum.Call {
  get inputs(): FireVaultEventCall__Inputs {
    return new FireVaultEventCall__Inputs(this);
  }

  get outputs(): FireVaultEventCall__Outputs {
    return new FireVaultEventCall__Outputs(this);
  }
}

export class FireVaultEventCall__Inputs {
  _call: FireVaultEventCall;

  constructor(call: FireVaultEventCall) {
    this._call = call;
  }

  get caller(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get trader(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get inverseCopyTrade(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get copySizeBPS(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get defaultCollateral(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class FireVaultEventCall__Outputs {
  _call: FireVaultEventCall;

  constructor(call: FireVaultEventCall) {
    this._call = call;
  }
}

export class SetGovernorCall extends ethereum.Call {
  get inputs(): SetGovernorCall__Inputs {
    return new SetGovernorCall__Inputs(this);
  }

  get outputs(): SetGovernorCall__Outputs {
    return new SetGovernorCall__Outputs(this);
  }
}

export class SetGovernorCall__Inputs {
  _call: SetGovernorCall;

  constructor(call: SetGovernorCall) {
    this._call = call;
  }

  get newGovernor(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetGovernorCall__Outputs {
  _call: SetGovernorCall;

  constructor(call: SetGovernorCall) {
    this._call = call;
  }
}

export class SetKeeperCall extends ethereum.Call {
  get inputs(): SetKeeperCall__Inputs {
    return new SetKeeperCall__Inputs(this);
  }

  get outputs(): SetKeeperCall__Outputs {
    return new SetKeeperCall__Outputs(this);
  }
}

export class SetKeeperCall__Inputs {
  _call: SetKeeperCall;

  constructor(call: SetKeeperCall) {
    this._call = call;
  }

  get newKeeper(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetKeeperCall__Outputs {
  _call: SetKeeperCall;

  constructor(call: SetKeeperCall) {
    this._call = call;
  }
}

export class SetManagementFeeCall extends ethereum.Call {
  get inputs(): SetManagementFeeCall__Inputs {
    return new SetManagementFeeCall__Inputs(this);
  }

  get outputs(): SetManagementFeeCall__Outputs {
    return new SetManagementFeeCall__Outputs(this);
  }
}

export class SetManagementFeeCall__Inputs {
  _call: SetManagementFeeCall;

  constructor(call: SetManagementFeeCall) {
    this._call = call;
  }

  get newManagementFee(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetManagementFeeCall__Outputs {
  _call: SetManagementFeeCall;

  constructor(call: SetManagementFeeCall) {
    this._call = call;
  }
}

export class WithdrawETHCall extends ethereum.Call {
  get inputs(): WithdrawETHCall__Inputs {
    return new WithdrawETHCall__Inputs(this);
  }

  get outputs(): WithdrawETHCall__Outputs {
    return new WithdrawETHCall__Outputs(this);
  }
}

export class WithdrawETHCall__Inputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }

  get recepient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawETHCall__Outputs {
  _call: WithdrawETHCall;

  constructor(call: WithdrawETHCall) {
    this._call = call;
  }
}

export class WithdrawTokensCall extends ethereum.Call {
  get inputs(): WithdrawTokensCall__Inputs {
    return new WithdrawTokensCall__Inputs(this);
  }

  get outputs(): WithdrawTokensCall__Outputs {
    return new WithdrawTokensCall__Outputs(this);
  }
}

export class WithdrawTokensCall__Inputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }

  get recepient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get token(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class WithdrawTokensCall__Outputs {
  _call: WithdrawTokensCall;

  constructor(call: WithdrawTokensCall) {
    this._call = call;
  }
}
